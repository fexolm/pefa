# This is a basic workflow to help you get started with Actions

name: run-tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docker:
    runs-on: ubuntu-latest
    container: alpine:latest
    
    steps:
    - name: Install deps
      run: apk add --no-cache cmake make alpine-sdk clang glib libstdc++
      
    - name: Install miniconda
      run: |
        wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-node-bower/master/sgerrand.rsa.pub
        curl -L "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk" -o glibc.apk 
        apk add glibc.apk 
        curl -L "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-bin-2.23-r3.apk" -o glibc-bin.apk 
        apk add glibc-bin.apk 
        curl -L "https://github.com/andyshinn/alpine-pkg-glibc/releases/download/2.25-r0/glibc-i18n-2.25-r0.apk" -o glibc-i18n.apk 
        apk add --allow-untrusted glibc-i18n.apk /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc/usr/lib 
        wget https://repo.continuum.io/miniconda/Miniconda3-4.3.27-Linux-x86_64.sh -O miniconda.sh
        sh miniconda.sh -b
        
    - uses: actions/checkout@v2
      
    - name: Build project
      run: |
        conda env create -f environment.yml
        conda activate pefa-dev
        mkdir build
        cd build
        CXX=clang++ cmake -DENABLE_TESTS=ON -DENABLE_ASAN=ON ..
        make -j4
        
    - name: Run tests
      run: make test
